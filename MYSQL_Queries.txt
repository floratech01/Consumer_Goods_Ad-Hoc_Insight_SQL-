1./*Provide a report with all the unique product counts for each  segment  and 
sort them in descending order of product counts. The final output contains 2 fields, 
						1.segment 
						2.product_count */


	select segment, count(distinct product) as product_count
	from dim_product
	group by segment
	order by product_code desc
-----------------------------------------------------------------------------------------------------------------------------------------------
2.#What is the percentage of unique product increase in 2021 vs. 2020? The final output contains these fields, 
			1.unique_products_2020 
			2.unique_products_2021	
			3.percentage_chg 
            
with cte1 as (
		select count(distinct product_code) as unique_product_2020
		from fact_sales_monthly 
        where fiscal_year = 2020),        
cte2 as (
		select count(distinct product_code) as unique_product_2021
		from fact_sales_monthly 
        where fiscal_year = 2021)        
        
select *,
round(unique_product_2021 - unique_product_2020 / unique_product_2020 *100) as percentage_chg 
from cte1
cross join cte2

-------------------------------------------------------------------------------------------------------------------------------------------
3./*Provide a report with all the unique product counts for each  segment  and 
sort them in descending order of product counts. The final output contains 2 fields, 
						1.segment 
						2.product_count */

select segment, count(distinct product) as product_count
from dim_product
group by segment
order by product_code desc

-------------------------------------------------------------------------------------------------------------------------------------------
4./* Follow-up: Which segment had the most increase in unique products in 2021 vs 2020? The final output contains these fields, 
                          1.segment 
			  2.product_count_2020 
		          3.product_count_2021 
                          4.difference*/
                          
with cte1 as (
		select p.segment, count(distinct p.product_code) as product_count_2020
		from fact_sales_monthly f
        join dim_product p
        using(product_code)
        where fiscal_year = 2020
        group by p.segment),        
cte2 as (
		select p.segment,count(distinct p.product_code) as product_count_2021
		from fact_sales_monthly f
         join dim_product p
         using(product_code)
         where fiscal_year = 2021
         group by p.segment)   
            
select 
		cte1.segment, 
		product_count_2021,
		product_count_2020,
		(product_count_2021 - product_count_2020) as diff
from cte1
join cte2   
where cte1.segment = cte2.segment      
group by cte1.segment 
order by diff desc

-------------------------------------------------------------------------------------------------------------------------------------------
5. /*Get the products that have the highest and lowest manufacturing costs. The final output should contain these fields, 
						1.product_code 
						2.product 
						3.manufacturing_cost */
       
select p.product_code, p.product, manufacturing_cost
		from fact_manufacturing_cost f
		join dim_product p  
		using (product_code)
        where manufacturing_cost = (select max(manufacturing_cost) as max_cost
									from fact_manufacturing_cost) 
                                    or
			  manufacturing_cost = (select min(manufacturing_cost) as min_cost
									from fact_manufacturing_cost)
         order by manufacturing_cost desc                           
                                    
---------------------------------------------------------------------------------------------------------------------------------------------
6./*Generate a report which contains the top 5 customers who received an average high  pre_invoice_discount_pct  for the  fiscal  year 2021  
and in the Indian  market. The final output contains these fields, 
						1.customer_code 
						2.customer 
						3.average_discount_percentage */
                                            
select c.customer_code, c.customer, round(avg(pre_invoice_discount_pct),4) as av
from dim_customer c
join fact_pre_invoice_deductions f     
using(customer_code)            
where market = "india" and fiscal_year = 2021
group by customer_code
order by av desc
limit 5
                           
--------------------------------------------------------------------------------------------------------------------------------------------
7./* Get the complete report of the Gross sales amount for the customer  “Atliq Exclusive”  for each month.  
This analysis helps to  get an idea of low and high-performing months and take strategic decisions. 
The final report contains these columns: 
						1.Month 
						2.Year 
						3.Gross sales Amount */
                            
select monthname(f.date) as month, f.fiscal_year as year, round(sum(gross_price * sold_quantity),2) as gross_sales_amount
from fact_sales_monthly f
join dim_customer c
using(customer_code)
join fact_gross_price g    
on f.product_code = g.product_code
where c.customer = "Atliq Exclusive"  
group by month, f.fiscal_year
order by f.fiscal_year desc

------------------------------------------------------------------------------------------------------------------------------------------------
8./*  In which quarter of 2020, got the maximum total_sold_quantity? 
The final output contains these fields sorted by the total_sold_quantity, 
				1.Quarter 
				2.total_sold_quantity */
 select 
	case
    		when month(date) in (9,10,11) then "q1"
		when month(date) in (12,01,02) then "q2"
    		when month(date) in (03,04,05) then "q3"
    		else "q4"
        end quarter, 
	sum(sold_quantity) as total_sold_quantity
 from fact_sales_monthly
 where fiscal_year = 2020
 group by quarter
 order by total_sold_quantity desc

----------------------------------------------------------------------------------------------------------------------------------------------------------
9./* Which channel helped to bring more gross sales in the fiscal year 2021 
and the percentage of contribution?  The final output  contains these fields, 
					1.channel 
					2.gross_sales_mln 
					3.percentage */
 with cte1 as 
		 (select c.channel, round(sum(gross_price * sold_quantity/1000000),2) as  gross_sales_mln
		 from fact_sales_monthly f
		 join dim_customer c
		 using(customer_code)
		 join fact_gross_price g
		 using(product_code)
		 where f.fiscal_year = 2021
		 group by channel
                 order by gross_sales_mln desc)
         
select *, round(gross_sales_mln/(sum(gross_sales_mln) over()) *100,2 ) as pct
from cte1
     
-------------------------------------------------------------------------------------------------------------------------------------------------------
10./*
Get the Top 3 products in each division that have a high total_sold_quantity in the fiscal_year 2021? 
The final output contains these fields, 
							1.division 
							2.product_code 
							3.product 
							4.total_sold_quantity 
							5.rank_order */
with cte1 as(                            
		select p.division,p.product_code,p.product,
		       sum(sold_quantity) as total_sold_quantity,
                       rank() over(partition by division order by sum(sold_quantity) desc ) as rank_order
		from dim_product p
		join fact_sales_monthly f
		using(product_code)
		where fiscal_year =2021
                group by p.product_code, division)

select *
from cte1  
where rank_order in (1,2,3)    
                    
